[licensecheck]
flags = copyright
apt = devscripts
command = licensecheck --check=. --recursive --copyright .
# TODO: is --check=. reasonable?

[suspicious-source]
apt = devscripts, python3-magic | python-magic
command = suspicious-source

[licensecheck-generated-files]
apt = devscripts
command = licensecheck --check=. --recursive --copyright . | grep --text -F 'GENERATED FILE'

[licensecheck-incorrect-fsf-address]
apt = devscripts
command = licensecheck --check=. --recursive --copyright . | grep --text -F 'with incorrect FSF address'

[codespell]
flags = spelling fixme
apt = codespell
command = codespell --quiet-level=3
comment =
 Additional codespell dictionaries need packaging:
 https://github.com/orbitcowboy/codespell_dictionary

[sourcecode-spellchecker]
flags = todo spelling
comment = CPAN Sourcecode::Spellchecker

[fdupes]
apt = fdupes
command = fdupes -q -r . | grep -vE '/(\.(git|svn|bzr|hg|sgdrawer)|_(darcs|FOSSIL_)|CVS)(/|$)' | cat -s

[bitmap-multilayer]
flags = images
comment = Check with upstream where the GIMP XCF source files are.
files = *.png *.gif *.jpg *.jpeg
command = grep -iF gimp {files}

[bitmap-vector]
flags = images
comment = Check with upstream where the Inkscape SVG source files are.
files = *.png *.gif *.jpg *.jpeg
command = grep -iF inkscape {files}

[cpuinfo]
comment = Parsing /proc/cpuinfo is not portable at all, use /sys instead.
command = grep -rF /proc/cpuinfo .

[readme-install]
comment = Users of binary packages do not need install instructions.
files = *README*
not-files = README.md README.rst README.install
command = grep --ignore-case --fixed-strings --with-filename install {files}

[autoupdate]
flags = modify
apt = autoconf
files = configure.ac configure.in
command = autoupdate
comment = Overwrites configure.ac (#776559)

[autoscan]
flags = modify
apt = autoconf
files = configure.ac configure.in
command = autoscan
comment = Overwrites autom4te.cache/ autoscan.log configure.scan (#818572)

[empty]
command = find \( -name .git -o -name .svn -o -name .bzr -o -name CVS -o -name .hg -o -name _darcs -o -name _FOSSIL_ -o -name .sgdrawer \) -prune -o -empty -print

[todo]
command = grep -riE 'fixme|todo|hack|xxx+|broken' .

[isutf8]
apt = moreutils
# TODO: replace not-dirs with --ignore option
not-dirs = .git .svn .bzr CVS .hg _darcs _FOSSIL_ .sgdrawer
flags = fixme
comment = A recursive option needs to be implemented (#780197)
not-files =
 *.blend
 *.icns *.bmp *.ico *.png *.gif *.jpg *.jpeg *.tga *.xcf *.tif *.tiff
 *.mo *.gmo
 *.gz *.bz2 *.xz *.lz *.zip *.tar *.deb
 *.pdf *.odt *.docx *.doc
 *.chm
 *.torrent
 *.pyc *.pyo *.o *.so *.so.* *.debug
 *.wav *.ogg *.oga *.ogv *.mid *.mp3 *.flac
 *.ttf *.otf *.fon
 *.pgp *.gpg
 *.dat
command = isutf8 {files}

[disabled-tests]
command = grep -riEC1 '((check|test) *\|\| *true|-dh_auto_test)' .

[timeless]
comment = Prevents reproducible builds: https://reproducible-builds.org/
command = grep -rE ' __DATE__|__TIME__' .

[spellintian]
flags = spelling
apt = lintian
not-dirs =
 .bzr .git .hg .svn CVS RCS SCCS _MTN _darcs .pc
 .cabal-sandbox .cdv .metadata CMakeFiles _build
 _sgbak autom4te.cache blib cover_db node_modules
 ~.dep ~.dot ~.nib ~.plst
not-files =
 *.bak *.swp #.* #*# core.* *~
 *.gif *.jpg *.jpeg *.png
 *.min.js *.js.map *.js.min
 *.min.css *.css.map *.css.min
command = spellintian --picky {files}

[project-flint]
flags = todo
comment = #809042 https://github.com/pengwynn/flint

[http]
comment = check if these can be switched to https://
command = grep -rF http: .

[embed-readme]
flags = embed
files = *README*
comment = Please check if these README files belong to embedded code/data copies.
command = find -mindepth 2 -iname '*README*'

[embed-dirs]
flags = embed
comment = Please check if these directories contain embedded code/data copies.
command = find -type d -name 'vendor*' -o -iname '*rd*party' -o -name contrib -o -name imports -o -name node_modules -o -iname external

# TODO: EC2_SECRET_KEY
# TODO: curl -k --insecure
# TODO: wget --no-check-certificate
# TODO: svn --trust-server-cert
# TODO: bogomips
# TODO: diction
# TODO: ripper #796920
# TODO: similarity-tester sim_text
# TODO: https://jwilk.net/software/mwic
# TODO: https://www.cs.umd.edu/~nspring/software/style-check-readme.html
# TODO: https://github.com/coala-analyzer/coala
# TODO: https://github.com/nexB/scancode-toolkit/
# TODO: https://github.com/jeremylong/DependencyCheck/
# TODO: http://www.coding-guidelines.com/numbers/
# TODO: ebnflint
# TODO: http://fbinfer.com/ #789059

# vim:ft=dosini
