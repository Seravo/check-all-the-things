Things found on
<https://wiki.debian.org/HowToPackageForDebian#Check_points_for_any_package>
but not included here yet::

   find ! -type d | xargs file  | grep ': *ELF ' | sed 's/: +*.*//' | xargs --no-run-if-empty eu-elflint --quiet --gnu-ld --strict
   grep -r 'PATH' .
   grep -r 'x86_64-linux-gnu' .

Places to find new checks:

apt-file search --regex 'bin/.*(lint|check|valid|tidy|detect)'
apt-cache search --names-only '(lint|check|valid|tidy|detect)'
https://github.com/scrooloose/syntastic/tree/master/syntax_checkers
https://git.fedorahosted.org/cgit/FedoraReview.git
https://github.com/michenriksen/gitrob/blob/master/patterns.json
https://registry.hub.docker.com/repos/codeclimate/
https://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis#C.2FC.2B.2B
https://github.com/mcandre/linters
https://gitlab.com/linted/linted/tree/master/scripts
http://docs.codacy.com/docs/special-thanks
https://github.com/linuxfoundation/cii-best-practices-badge/blob/master/doc/criteria.md#user-content-analysis
https://github.com/simplymeasured/ruby-appraiser
https://bazaar.launchpad.net/~ubuntu-security/ubuntu-security-tools/trunk/files/head:/audits/
https://github.com/sk-/git-lint
https://prospector.readthedocs.org/en/master/supported_tools.html
http://www.flycheck.org/manual/latest/Supported-languages.html
https://atomlinter.github.io/
https://github.com/coala-analyzer/coala-bears/tree/master/bears
https://github.com/alecthomas/gometalinter

Wildcards is not always an adequate mechanisms for detecting file types. Think
of Python or Perl scripts without extensions, or ELF binaries.

A mechanisms for filtering output is needed.

Only inform about a skipped check if there were actually matching files.

A mechanism to specify the amount/pedanticness of the output.

.. vim:ts=3 sw=3 et ft=rst
